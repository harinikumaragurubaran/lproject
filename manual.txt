https://github.com/harinikumaragurubaran/lproject

aws s3api create-bucket --bucket my-terraform-state-bucket --region us-east-1 --create-bucket-configuration LocationConstraint=us-east-1
aws dynamodb create-table --table-name terraform-locks --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --billing-mode PAY_PER_REQUEST


terraform fmt -recursive

docker build -t lambda-microservice .

docker tag lambda-repo:latest <your_account_id>.dkr.ecr.us-east-1.amazonaws.com/<ecr_repo_name>:latest
docker tag lambda-microservice:latest 872346934445.dkr.ecr.us-east-1.amazonaws.com/lambda-microservice:latest

aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <your_account_id>.dkr.ecr.us-east-1.amazonaws.com
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 872346934445.dkr.ecr.us-east-1.amazonaws.com

docker push <your_account_id>.dkr.ecr.us-east-1.amazonaws.com/<ecr_repo_name>:latest
docker push 872346934445.dkr.ecr.us-east-1.amazonaws.com/lambda-microservice:latest

docker run -d -p 9000:8080 <build-name>:latest
docker run -d -p 9000:8080 lambda-microservice:latest

curl -X POST \
  http://localhost:9000/2015-03-31/functions/function/invocations \
  -H "Content-Type: application/json" \
  -d '{
  "httpMethod": "GET",
  "path": "/appointments",
  "headers": {},
  "queryStringParameters": {},
  "requestContext": {
    "http": {
      "method": "GET",
      "path": "/appointments"
    }
  }
}'

docker build --no-cache -t lambda-microservice .

npm install @vendia/serverless-express


x-ray
Go to your Lambda function console.

Under Configuration â†’ Monitoring and operations tools.

Enable Active tracing.
x-ray iam role:

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
      ],
      "Resource": "*"
    }
  ]
}


